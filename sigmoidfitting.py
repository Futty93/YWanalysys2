# -*- coding: utf-8 -*-
"""sigmoidFitting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ftI_ifgMDo3tZZKC1o2uC1ERX1TOUqRC
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Define the sigmoid function
def sigmoid(x, a, b, c):
    return c / (1 + np.exp(-a * (np.log10(x) - b)))

# Given data
x = np.array([0, 3, 10, 30, 100, 300, 1000, 3000, 10000, 30000])
y = np.array( [645912.4444444444, 662687.4444444445, 681729.4444444445, 782613.2222222221, 1104603.4444444443, 1799189.7777777778, 1875477.3333333333, 1562872.5555555557, 1655872.6666666667, 1508195.888888889])
maxNum = max(y)
for i in range(10):
  y[i] = y[i]/maxNum

# Fit the data to the sigmoid curve
popt, pcov = curve_fit(sigmoid, x, y)

# Generate values for the x-axis to plot the fitted curve
x_fit = np.logspace(0, np.log10(30000), 100)
y_fit = sigmoid(x_fit, *popt)

# Find X when Y is 0.5
y_target = 0.5
x_target = np.power(10, (np.log10(x_fit[np.abs(y_fit - y_target).argmin()])))

# Plotting the original data and the fitted curve
plt.scatter(x, y, label='Data')
plt.plot(x_fit, y_fit, 'r-', label='Fitted Curve')
plt.xscale('log')
plt.xlabel('X (log scale)')
plt.ylabel('Y')
plt.legend()
plt.show()

# Print the parameters of the fitted curve
print('Fitted Parameters:')
print('a:', popt[0])
print('b:', popt[1])
print('c:', popt[2])

# Print the value of X when Y=0.5
print('X when Y=0.5:', x_target)